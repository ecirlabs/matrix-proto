syntax = "proto3";

package matrix.kv.v1;

import "google/protobuf/timestamp.proto";
import "matrix/common/v1/common.proto";

option go_package = "github.com/ecirlabs/matrix-proto/gen/go/matrix/kv/v1;kv";

message Key {
    string namespace = 1;
    string key = 2;
}

message Value {
    bytes data = 1;
    uint64 version = 2;
    google.protobuf.Timestamp last_modified = 3;
}

message PutKeyRequest {
    Key key = 1;
    Value value = 2;
}

message DeleteKeyRequest {
    Key key = 1;
    uint64 version = 2;
}

message MergeValuesRequest {
    Key key = 1;
    repeated Value values = 2;
}

message SnapshotChunk {
    uint32 chunk_id = 1;
    uint32 total_chunks = 2;
    repeated PutKeyRequest entries = 3;
}

message GetRequest {
    Key key = 1;
}

message GetResponse {
    matrix.common.v1.Status status = 1;
    Value value = 2;
}

message ScanRequest {
    string namespace = 1;
    string prefix = 2;
    uint32 limit = 3;
}

message ScanResponse {
    repeated PutKeyRequest entries = 1;
    string next_token = 2;
}

message GetSnapshotRequest {}

message PutKeyResponse {
    matrix.common.v1.Status status = 1;
    string message = 2;
}

message DeleteKeyResponse {
    matrix.common.v1.Status status = 1;
    string message = 2;
}

message MergeValuesResponse {
    matrix.common.v1.Status status = 1;
    string message = 2;
}

message GetSnapshotResponse {
    uint32 chunk_id = 1;
    uint32 total_chunks = 2;
    repeated PutKeyRequest entries = 3;
}

service KvService {
    rpc Get(GetRequest) returns (GetResponse) {}
    rpc PutKey(PutKeyRequest) returns (PutKeyResponse) {}
    rpc DeleteKey(DeleteKeyRequest) returns (DeleteKeyResponse) {}
    rpc Scan(ScanRequest) returns (stream ScanResponse) {}
    rpc MergeValues(MergeValuesRequest) returns (MergeValuesResponse) {}
    rpc GetSnapshot(GetSnapshotRequest) returns (stream GetSnapshotResponse) {}
} 