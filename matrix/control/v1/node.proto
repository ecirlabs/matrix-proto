syntax = "proto3";

package matrix.control.v1;

import "matrix/common/v1/common.proto";
import "matrix/agent/v1/metrics.proto";

option go_package = "github.com/ecirlabs/matrix-proto/gen/go/matrix/control/v1;control";

message HealthCheckRequest {
    bool deep = 1;  // If true, check all subsystems
}

message HealthCheckResponse {
    matrix.common.v1.Status status = 1;
    map<string, matrix.common.v1.Status> subsystems = 2;
    string message = 3;
}

message VersionRequest {}

message VersionResponse {
    string version = 1;
    string git_commit = 2;
    string build_date = 3;
    string go_version = 4;
    map<string, string> build_info = 5;
}

message ShutdownRequest {
    bool force = 1;
    uint32 grace_period_seconds = 2;
}

message ShutdownResponse {
    matrix.common.v1.Status status = 1;
    string message = 2;
}

message GetMetricsRequest {}

message NodeControlServiceGetMetricsResponse {
    matrix.agent.v1.AgentMetrics metrics = 1;
}

service NodeControlService {
    rpc HealthCheck(HealthCheckRequest) returns (HealthCheckResponse) {}
    rpc Version(VersionRequest) returns (VersionResponse) {}
    rpc Shutdown(ShutdownRequest) returns (ShutdownResponse) {}
    rpc GetMetrics(GetMetricsRequest) returns (stream NodeControlServiceGetMetricsResponse) {}
} 