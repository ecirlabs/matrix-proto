syntax = "proto3";

package matrix.agent.v1;

import "google/protobuf/timestamp.proto";
import "matrix/common/v1/common.proto";

option go_package = "github.com/ecirlabs/matrix-proto/gen/go/matrix/agent/v1;agent";

message CpuStats {
    double usage_percent = 1;
    uint64 system_time = 2;
    uint64 user_time = 3;
    uint32 thread_count = 4;
}

message MemStats {
    uint64 rss_bytes = 1;
    uint64 heap_bytes = 2;
    uint64 stack_bytes = 3;
    uint64 malloc_count = 4;
    uint64 free_count = 5;
}

message CustomMetric {
    string name = 1;
    enum Type {
        TYPE_UNSPECIFIED = 0;
        TYPE_COUNTER = 1;
        TYPE_GAUGE = 2;
        TYPE_HISTOGRAM = 3;
    }
    Type type = 2;
    oneof value {
        double number_value = 3;
        string string_value = 4;
        bytes bytes_value = 5;
    }
    map<string, string> labels = 6;
}

message AgentMetrics {
    string agent_id = 1;
    google.protobuf.Timestamp timestamp = 2;
    CpuStats cpu = 3;
    MemStats memory = 4;
    repeated CustomMetric metrics = 5;
}

message StreamMetricsRequest {
    matrix.common.v1.Uuid agent_id = 1;
}

message GetMetricsRequest {
    matrix.common.v1.Uuid agent_id = 1;
}

message StreamMetricsResponse {
    AgentMetrics metrics = 1;
}

message GetMetricsResponse {
    AgentMetrics metrics = 1;
}

service MetricsService {
    rpc StreamMetrics(StreamMetricsRequest) returns (stream StreamMetricsResponse) {}
    rpc GetMetrics(GetMetricsRequest) returns (GetMetricsResponse) {}
} 